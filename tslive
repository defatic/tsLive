#!/bin/bash
# Depends on the twitch-cli command from https://github.com/twitchdev/twitch-cli & jq from JSON handeling

set -e

EXE=${0##*/}
[[ -z "$EXE" ]] && echo "Could not determine name of executable." && exit 1
[[ -z $(command -v twitch) ]] && echo "You need to install twitch-cli from https://github.com/twitchdev/twitch-cli" && exit 1
[[ -z $(command -v jq) ]] && echo "You need to install jq" && exit 1

declare -A DATA

: "${DATA[path]:="$XDG_DATA_HOME/$EXE"}"
: "${DATA[file]:="streamers"}"

[[ ! -d "${DATA[path]}" ]] && mkdir -p "${DATA[path]}"
[[ ! -e "${DATA[path]}/${DATA[file]}" ]] && touch "${DATA[path]}/${DATA[file]}" && echo "Run: $EXE add [name] to get going!" && exit "$?"

_list() {
  while IFS= read -r line; do
    echo "${line}"
  done < "${DATA[path]}/${DATA[file]}"
}

_add() {
  [[ -z "${1}" ]] && echo "You need to provide a name to be added" && exit 1

  while IFS= read -r line; do
    nameArray+=("${line}")
  done < "${DATA[path]}/${DATA[file]}"

  if [[ "${nameArray[*]}" =~ ${1} ]]; then
    echo "${BASH_REMATCH[0]} already exists in your list!"
    exit 1
  fi
  echo "$1" >> "${DATA[path]}/${DATA[file]}"

  echo "Added: ${1}"
}

_delete() {
  [[ -z "${1}" ]] && echo "You need to provide a name to be deleted" && exit 1

  while IFS= read -r line; do
    nameArray+=("${line}")
  done < "${DATA[path]}/${DATA[file]}"

  if [[ "${nameArray[*]}" =~ ${1} ]]; then
    for i in "${!nameArray[@]}"; do
      if [[ "${nameArray[i]}" = "${1}" ]]; then
        unset "nameArray[i]"
      fi
    done

    echo "Deleting name: ${BASH_REMATCH[0]}"

    for l in ${nameArray[*]}; do
      echo "$l"
    done > "${DATA[path]}/${DATA[file]}"
  fi
}

# Tab completetion taken from rwxrob. rwxrob.tv
# add `complete -C <script name> <script name>` to your .bashrc
declare -a commands=( list add delete )

if [[ -n $COMP_LINE ]]; then
  for c in "${commands[@]}"; do
    [[ ${c:0:${#2}} == "${2,,}" ]] && echo "$c"
  done
  exit
fi

# Delegation
if [[ -n "$1" ]]; then
  declare cmd="$1"; shift
  for c in "${commands[@]}"; do
    [[ $c == "$cmd" ]] && "_$cmd" "$@" && exit "$?"
  done
fi

# Output

declare -a streamerArray

echo "Checking which streamers are live!"
echo "----------------------------------"

while read -r streamer; do
  if [[ $(twitch api get streams -Puq user_login="$streamer") =~ (\"type\"\:\"live\") ]]; then
	twitch_game_name=$(twitch api get streams -Pq user_login="$streamer" | jq .data[].game_name)
#     echo "$streamer is ${BASH_REMATCH[0]: -5:4}"
    echo "$streamer"
	echo "  $twitch_game_name"
    streamerArray+=( "${streamer}" )
  fi
done < "${DATA[path]}/${DATA[file]}"

if [[ -z "${streamerArray[*]}" ]]; then
  echo "No streamers from your list are live"
  exit
fi

echo "----------------------------------"

PS3="Select a streamer to watch: "

select opt in "${streamerArray[@]}" quit; do
  case $opt in
    quit)
      exit ;;
    *) 
	  select opt_app in browser streamlink; do
		case $opt_app in
		  browser)
			  xdg-open "https://twitch.tv/$opt" 2>/dev/null &
			  exit ;;
		  streamlink)
		  	  sl "https://twitch.tv/$opt" 2>/dev/null &
			  exit ;;
	    esac
	  done
      exit ;;
  esac
done
